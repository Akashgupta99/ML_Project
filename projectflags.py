# -*- coding: utf-8 -*-
"""ProjectFlags.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tda64QGPg0TvslGpEeUj7jl5e2jHe1uY
"""

import pandas as pd
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/flags/flag.data'
dataset = pd.read_csv(url, header = None, na_values = '?', skipinitialspace = True)
print(dataset.head())
print(dataset.isnull().sum())
columns = [0,17,28,29]
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
for i in columns:
  dataset[i]  =le.fit_transform(dataset[i])
print(dataset)

import matplotlib.pyplot as plt
import seaborn as sb
import numpy as np

target = dataset[7]
data = dataset.drop(columns = [7])
print(target)
print(data)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(data, target, test_size = 0.3)
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train_sc = sc.fit_transform(x_train)
x_test_sc = sc.fit_transform(x_test)

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(x_train_sc, y_train)

pred_test_lr = lr.predict(x_test_sc)
from sklearn.metrics import accuracy_score

print("Testing Accuracy using Logistic Regression")
print(accuracy_score(pred_test_lr, y_test))

from sklearn.neighbors import KNeighborsClassifier
kn = KNeighborsClassifier()
kn.fit(x_train_sc, y_train)

pred_test_kn = kn.predict(x_test_sc)
from sklearn.metrics import accuracy_score

print("Testing Accuracy using KNN")
print(accuracy_score(pred_test_kn, y_test))

from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier()
rf.fit(x_train_sc, y_train)

pred_test_rf = rf.predict(x_test_sc)
from sklearn.metrics import accuracy_score

print("Testing Accuracy using Random Forest")
print(accuracy_score(pred_test_rf, y_test))